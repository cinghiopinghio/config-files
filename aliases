
# enable color support of ls and also add handy aliases
if [[ -x /usr/bin/dircolors ]]; then
  alias ls='ls --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alFh'
alias la='ls -A'
alias l='ls -lFh'

# MC exits in the same directory
if [ -e /usr/lib/mc/mc-wrapper.sh ]; then
  alias mc='. /usr/lib/mc/mc-wrapper.sh'
fi

alias :wq='exit'
alias ..='cd ..'
#MYHOST=$(hostname -s)
#[[ $MYHOST != 'quantumcl' && $MYHOST != 'terminus' ]] && alias vim='vim --servername vim'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias scr='save-vars; screen -R'

VLESS=$(find /usr/share/vim -name 'less.sh')
if [ ! -z $VLESS ]; then
  alias vless=$VLESS
fi
alias vimrc='vim ~/.vimrc'
alias nv='nvim'

alias head1='head -1'
alias tail1='tail -1'
alias du='du -h'
alias du1='du --max-depth=1 -h'
alias du0='du --max-depth=0 -h'
alias df='df -h'

if [[ -e /usr/bin/mutt-patched ]]; then
  alias mutt='mutt-patched; notmuch new --no-hooks'
else
  alias mutt='mutt; notmuch new --no-hooks'
fi
alias alot-u='alot search tag:unread'

# GIT + SVN

svnhist(){
  svn log | awk 'BEGIN{OFS="\t";ls=80}{if($2=="|"){printf("%4s\033[1;31m%12s\033[0m: (%s)  ",$1,$3,$5)}else{if($0!=""){if (length($0)<ls){add=""}else{add="..."};print substr($0,1,ls) add}}}' | sed -e '/------/d'
}

#zipped files
ztail(){
zcat $1 | tail
}
zhead(){
zcat $1 | head
}

# python aliases
alias ipynb='ipython2 notebook --pylab inline'

alias uruake='urxvt -geometry 128x29+100+0 -pe kuake &'

##################
# bash functions #
##################

# show all colors on terminal
sh_colors(){
  for i in {1..255}; do echo -e "\e[38;5;${1};1m\e[48;5;${i}m    \e[0m\e[38;5;${i}m $i\e[0m"; done
}


# git remove submodules
rm_git_submodules(){
  submodulepath=${1%/}
  git rm --cached $submodulepath
  git config -f .git/config --remove-section submodule.$submodulepath
  git config -f .gitmodules --remove-section submodule.$submodulepath
  rm -Rf .git/modules/$submodulepath
  rm -Rf $submodulepath
}


# vim: set ft=sh:
# vim: set fdm=indent:
