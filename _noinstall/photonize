#!/usr/bin/env bash

COMMAND="photonize"

# Default params
# copy from here
INFOLDER='.'
#copy to here
OUTFOLDER=${HOME}/grafica/foto
COMMENT=''
DRY=false
VERB=false

#FORMATS
# %Y = year
# %m = month
# $d = day
# %H = hour
# %M = mins
# %S = secs
# ID = use camera file basename
# out folder format 2014/2014-12-15
FOL_FORMAT='%Y/%Y-%m-%d'
# out file format 20141215-FILENAME.EXTERNSION
FIL_FORMAT='%Y%m%d-ID'

CACHE=${XDG_CACHE_HOME:-~/.cache}
CONFIG=${XDG_CONFIG_HOME:-~/.config}


# Execute getopt
ARGS=$(getopt -o f:t:nv -l "from:,to:,dry,verbose" -n "photonize" -- "$@");


#Bad arguments
if [ $? -ne 0 ];
then
  exit 1
fi

eval set -- "$ARGS";

while true; do
  case "$1" in
    -f|--from)
      shift;
      if [ -n "$1" ]; then
        INFOLDER=$1
        shift;
      fi
      ;;
    -t|--to)
      shift;
      if [ -n "$1" ]; then
        OUTFOLDER=$1
        shift;
      fi
      ;;
    -n|--dry)
      shift;
      echo -e "\n--- Dry Run ---\n"
      DRY=true
      ;;
    -v|--verbose)
      shift;
      VERB=true
      ;;
    --)
      shift;
      break;
      ;;
  esac
done

function log () {
    if [[ "$VERB" == "true" ]]; then
        echo "$@"
    fi
}

log "Installing from folder: ${INFOLDER}"
log "Installing to folder:   ${OUTFOLDER}"

function sanitize {
  echo "$1" | iconv -s -c -f utf8 -t ascii//TRANSLIT//IGNORE |\
    sed -e 's/[^a-zA-Z0-9._]/-/g'
}

function frmt {
  # change date format to formats
  # input: date format ID
  str=$(date -u -d"$1" +"$2")
  str=$(echo $str | sed "s|ID|$3|")
  echo ${str,,} # lowercase everything
}

[[ -e "${CONFIG}/${COMMAND}" ]] && last=$(cat ${CONFIG}/${COMMAND})\
                                || last=0 

for f in $(find ${INFOLDER} -type f);
do
  #mime=$(file --mime-type $f | sed -r 's|.*: (.*)/.*|\1|')
  extension=${f##*.}
  basename=$(basename ${f} .${extension})
  extension=${extension,,}

  datetime=$(exiftool -s3 -DateTimeOriginal $f 2>>/dev/null)
  if [[ "$?" == "0" ]];
  then
    datetime=$(echo $datetime | sed -r 's|:|-|' | sed -r 's|:|-|')
  else
    datetime=$(stat -c "%y" $f)
  fi
  #[[ $(date -d "$datetime" 2>>/dev/null) ]] || datetime=$(stat -c "%y" $f)

  log "file - $f"
  log "base - $basename"
  log "ext  - $extension"
  log "date - $datetime"
  fol=$(frmt "$datetime" "$FOL_FORMAT" $basename)
  fil=$(frmt "$datetime" "$FIL_FORMAT" $basename)
  destination=${OUTFOLDER}/${fol}/${fil}.${extension}

  if [[ "$DRY" == 'true' ]];
  then
    echo "--- file source : $f"
    echo "--- file target : ${destination}"
  else
    mkdir -p ${OUTFOLDER}/${fol}
    cp $f $destination
  fi

done

if [[ "$DRY" == 'false' ]];
then
  rm -f ${CACHE}/${COMMAND}
  echo $datetime > ${CACHE}/${COMMAND}
fi

echo fine $destination
# TODO: mettere un link a un file cache per la prossima volta copiare solo
# file +nuovi (usando "newer" in find)

