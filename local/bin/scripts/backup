#!/bin/bash

# TODO:
# - switch from usb to nas
# - add exclude-from

# options for borg
OPTS='--verbose'
# archive name
ARCHIVENAME=cinBorgBak
# folders to archive
FOLDERS='/home /etc'
# position of archive
REMOTEARCH="brancamenta:/var/services/homes/mauro/${ARCHIVENAME}"
# binary path
REMOTEPATH=/var/services/homes/mauro/.local/bin/borg
# use timestamps to name backups
TIMESTAMP=`date +%Y%m%d-%H:%M`


# Excludes
EXCLUDE="--exclude-caches\
  --exclude '*~'\
  --exclude '.cache'\
  --exclude 'lost+found'\
  --exclude '.git'\
  --exclude '.svn'\
  --exclude '*.pyc'"


options=("NAS Brancamenta" "External Drive" "Local Archive")
PS3="Select from:"
select opt in "${options[@]}" "Quit"; do
  POS=${REPLY}
  case "${REPLY}" in
    1)
      ARCHIVE=${REMOTEARCH}
      OPTS="${OPTS} --remote-path ${REMOTEPATH}"
      ;;
    2)
      PARTS=( `lsblk --list --output MOUNTPOINT --noheadings` )
      select part in "${PARTS[@]}" "Quit"; do
        ARCHIVE=${part}/${ARCHIVENAME}
        break
      done
      ;;
    3)
      ;;
    *)
      exit 0
      ;;
  esac
  break
done

export BORG_RSH="ssh -i ${HOME}/.ssh/id_rsa -F ${HOME}/.ssh/config -o UserKnownHostsFile=${HOME}/.ssh/known_hosts"
export BORG_PASSPHRASE=`pass borg/brancamenta`
SUDOPTS='-E'
sudo ${SUDOPTS} borg create ${ARCHIVE}::${TIMESTAMP} ${FOLDERS}\
  ${EXCLUDE}\
  ${OPTS} --progress

sudo ${SUDOPTS} borg prune --stats --list\
  ${OPTS}\
  --keep-hourly 3 \
  --keep-daily 7 \
  --keep-weekly 4 \
  --keep-monthly 6 \
  --keep-yearly 1 \
  ${ARCHIVE}
export BORG_PASSPHRASE=''


notify-send "BORG-BACKUP" "Backup done! See log files"

#START=$(date +%s)
##rsync -aAXv --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/media/*","/lost+found"} /* "$1"
#sudo rsync -aAXv --delete --exclude={"mauro/musica/*","*/.cache/mozilla/*","*/.thumbnails/*","*/.cache/chromium/*","*/.local/share/Trash/*","mauro/video"} /home "$1"
#sudo rsync -aAXv --delete /etc "$1"
#FINISH=$(date +%s)
#echo "total time: $(( ($FINISH-$START) / 60 )) minutes, $((($FINISH-$START) % 60 )) seconds" | tee $1/"backup-from-$(date '+%Y-%m-%d-%T')"
