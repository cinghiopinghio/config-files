#Yii session offset
snippet yse "yse"
Yii::app()->session['${1}']; 
endsnippet

#Yii renderDynamic
snippet yrd "yrd"
$this->renderDynamic('${1:callback}'); 
endsnippet

#Yii set cache
snippet ycas "ycas"
Yii::app()->cache->set('${1:key}', ${2:value}, ${3:expire}, new C${4:}CacheDependency(${5})); 
endsnippet

#Yii Add cache
snippet ycad "ycad"
Yii::app()->cache->add('${1:key}', ${2:value}, ${3:expire}, new C${4}CacheDependency(${5})); 
endsnippet

#Yii register CSS file
snippet yregcf "yregcf"
Yii::app()->clientScript->registerCssFile('${1:file}'); 
endsnippet

#Yii requestType
snippet yreqtype "yreqtype"
Yii::app()->request->requestType 
endsnippet

#Yii isAjaxRequest
snippet yisajax "yisajax"
Yii::app()->request->isAjaxRequest 
endsnippet

#Yii translate
snippet yt "yt"
Yii::t('${1:category}', '${2:message}',array(${3})); 
endsnippet

#Yii register CSS
snippet yregc "yregc"
Yii::app()->clientScript->registerCss('${1:id}', '${2}'); 
endsnippet

#Yii log
snippet ylog "ylog"
Yii::log('${1:msg}', '${2:info}'); 
endsnippet

#Yii userHostAddress
snippet yuserip "yuserip"
YYii::app()->request->userHostAddress 
endsnippet

#Yii register script file
snippet yregsf "yregsf"
Yii::app()->clientScript->registerScriptFile('${1:scriptUrl}', CClientScript::POS_${2:END}); 
endsnippet

#Yii CLinkPager
snippet ylinkpager "ylinkpager"
$this->widget('CLinkPager', array('pages'=>$pages,'header'=>'${1}'})) 
endsnippet

#Yii CJSON::encode
snippet yjec "yjec"
CJSON::encode(${1:text}); 
endsnippet

#CActiveDataProvider
snippet yadp "yadp"
$dataProvider = new CActiveDataProvider('${1}', array(
  'criteria' => array(
		'condition' => '${2}',
		'order' => '${3}',
		'with' => array('${4}')
	),
//'pagination' => false,
	'pagination' => array(
		'pageSize'=>${5},
	),
));
${6}
// $dataProvider->getData() will return a list of Post objects 
endsnippet

#Yii renderDynamic internal
snippet yrdi "yrdi"
$this->renderDynamic('${1:callback}', array('${2:key}'=>${3:value})); 
endsnippet

#Yii register script
snippet yregs "yregs"
Yii::app()->clientScript->registerScript('${1:id}', '${2}', CClientScript::POS_${3:READY}); 
endsnippet

#Yii Flush cache
snippet ycaf "ycaf"
Yii::app()->cache->flush(); 
endsnippet

#Yii Yii::app()->request->cookies
snippet yco "yco"
Yii::app()->request->cookies['${1}'] 
endsnippet

#Yii user->
snippet yuser "yuser"
Yii::app()->user->${1}
endsnippet

#Yii refresh
snippet yrf "yrf"
$this->refresh(); 
endsnippet

#Yii import
snippet yimp "yimp"
Yii::import('${1}'); 
endsnippet

#Yii trace
snippet ytrace "ytrace"
Yii::trace('${1:msg}'); 
endsnippet

#Yii params
snippet ypar "ypar"
Yii::app()->params['${1}'] 
endsnippet

#Yii isPostRequest
snippet yispost "yispost"
Yii::app()->request->isPostRequest 
endsnippet

#Yii IF isAjaxRequest
snippet yifisajax "yifisajax"
if(Yii::app()->request->isAjaxRequest == TRUE)
{
	${1}
} 
endsnippet

#Yii Yii::app()->cache->delete
snippet ydelcache "ydelcache"
Yii::app()->cache->delete('${1:key}'); 
endsnippet

#Yii render view
snippet yr "yr"
$this->render('${1:view}',array('${2:key}'=>${3:value})); 
endsnippet

#Yii redirect
snippet yre "yre"
$this->redirect(array('${1:controller}/${2:action}')); 
endsnippet

#Yii Get cache
snippet ycag "ycag"
Yii::app()->cache->get('${1:key}'); 
endsnippet

#Yii render text
snippet yrt "yrt"
$this->renderText('${1}'); 
endsnippet

#Yii render partial
snippet yrp "yrp"
$this->renderPartial('${1:view}',array('${2:key}'=>${3:value})); 
endsnippet

#----------------Yii Model-----------------------------
#Yii Model count
snippet ycountm "ycountm"
${1:ModelName}::model()->count(${2:condition}, array('${3:key}'=>${4:value}));
endsnippet

#Yii Model countBySql
snippet ycountbs "ycountbs"
${1:ModelName}::model()->countBySql(${2:sql},array('${3:key}'=>${4:value}));
endsnippet

#Yii Model updateAll
snippet yupdatea "yupdatea"
${1:ModelName}::model()->updateAll(${2:array('attributes')}, ${3:condition},array('${4:key}'=>${5:value})); 
endsnippet

#Yii Model updateByPk
snippet yupdatebp "yupdatebp"
${1:ModelName}::model()->updateByPk(${2:pk}, ${3:array('attributes')}, ${4:condition},array('${5:key}'=>${6:value}));
endsnippet

#Yii Model deleteAll
snippet ydela "ydela"
${1:ModelName}::model()->deleteAll(${2:condition},array('${3:key}'=>${4:value}));
endsnippet

#Yii Model deleteByPk
snippet ydelbp "ydelbp"
${1:ModelName}::model()->deleteByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${5:value})); 
endsnippet

#Yii Model find
snippet yfind "yfind"
${1:ModelName}::model()->find(${2:condition},array('${3:key}'=>${4:value})); 
endsnippet

#Yii Model findAll
snippet yfinda "yfinda"
${1:ModelName}::model()->findAll(${2:condition},array('${3:key}'=>${4:value})); 
endsnippet

#Yii Model findByPk
snippet yfindbp "yfindbp"
${1:ModelName}::model()->findByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${5:value})); 
endsnippet

#Yii Model findAllByPk
snippet yfindabp "yfindabp"
${1:ModelName}::model()->findAllByPk(${2:pk}, ${3:condition},array('${4:key}'=>${5:value})); 
endsnippet

#Yii Model findBySql
snippet yfindbs "yfindbs"
${1:ModelName}::model()->findBySql(${2:sql}, array('${3:key}'=>${4:value})); 
endsnippet

#Yii Model findAllByAttributes
snippet yfindaba "yfindaba"
${1:ModelName}::model()->findAllByAttributes(array('${2:attributeName}'=>${3:attributeValue}), ${4:condition}, array('${5:key}'=>${6:value})); 
endsnippet

#Yii Model exists
snippet yexists "yexists"
${1:ModelName}::model()->exists(${2:condition}, array('${3:key}'=>${4:value})); 
endsnippet

#Yii Create model class
snippet ymodel "ymodel"
<?php
class ${1:ModelName} extends ${2:CActiveRecord}
{
	/**
	 * Returns the static model of the specified AR class.
	 * @return CActiveRecord the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return '${3:table_name}';
	}
	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		return array(
		);
	}
	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		return array(
		);
	}
	/**
	 * @return array customized attribute labels (name=&gt;label)
	 */
	public function attributeLabels()
	{
		return array(
		);
	}
}
endsnippet

#------------Yii Controller------------------------------------ 
#Yii Create controller class
snippet ycontroller "ycontroller"
<?php
/**
 * ${1:}
 */
class ${2:Site}Controller extends ${3:CController}
{
	  public function action${4:Index}()
	  {
	      ${5}
	  }
	// -----------------------------------------------------------
	// Uncomment the following methods and override them if needed
	/*
	public function filters()
	{
		// return the filter configuration for this controller, e.g.:
		return array(
			'inlineFilterName',
			array(
				'class'=>'path.to.FilterClass',
				'propertyName'=>'propertyValue',
			),
		);
	}
	public function actions()
	{
		// return external action classes, e.g.:
		return array(
			'action1'=>'path.to.ActionClass',
			'action2'=>array(
				'class'=>'path.to.AnotherActionClass',
				'propertyName'=>'propertyValue',
			),
		);
	}
	*/
}
endsnippet

#Yii Create controller action method
snippet yact "yact"
public function action${1:Index}(${2:params})
{
	${3}
}
endsnippet


