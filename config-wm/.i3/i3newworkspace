#!/usr/bin/env python
# -*- coding: utf-8 -*-

import i3ipc
import random
import string
import argparse


class Connection(object):
    def __init__(self):
        self.i3 = i3ipc.Connection()
        self.ws = [x['name'] for x in self.i3.get_workspaces()]

    def get_random_workspace_name(self, N=3, force_new=False):
        if force_new:
            del self.new_ws

        try:
            self.new_ws
        except AttributeError:
            self.new_ws = '6'*N
            while self.new_ws in self.ws:
                self.new_ws = ''.join(random.choices(string.ascii_uppercase +
                                                     string.digits,
                                                     k=N))
        return self.new_ws

    def open_new_random_workspace(self):
        self.get_random_workspace_name()
        self.i3.command('workspace ' + self.new_ws)

    def move_focused_to_workspace(self, workspace=None):
        if workspace is None:
            self.get_random_workspace_name()
            workspace = self.new_ws
        con = self.i3.get_tree().find_focused()
        con.command(
            " ".join(['move container to workspace', workspace + ';',
                      'workspace ', workspace])
        )


def main():
    parser = argparse.ArgumentParser(description='Process i3.')
    parser.add_argument('-m', '--move',
                        nargs="?",  # add optional argument
                        const=True,  # -m without arg
                        default=False,  # without -m
                        # action='store_true',
                        # choices=["left", "right"]
                        )
    args = parser.parse_args()

    i3 = Connection()

    if args.move:
        i3.move_focused_to_workspace()
    else:
        i3.open_new_random_workspace()


if __name__ == "__main__":
    main()
