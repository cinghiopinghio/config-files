# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term termite
set $term alacritty
# set $term kitty
# Your preferred application launcher
# set $menu dmenu_run
# set $menu "albert show"
# exec "albert"
set $menu "~/.config/rofi/scripts/rofimodi"
# set $menu2 "wofi --show drun"
set $menu2 "wldash"
set $altmenu "~/.config/rofi/scripts/menu.sh"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/sway/)
# output * bg /usr/share/sway/Sway_Wallpaper_Blue_1920x1080.png fill
exec_always ~/.local/bin/background
output * bg ~/.local/share/background.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
# In the actual configuration this is managed with systemd
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Touchpad
input "1739:31251:DLL06E4:01_06CB:7A13_Touchpad" {
  tap enabled
  tap_button_map lmr
  dwt enabled
  middle_emulation enabled
  natural_scroll disabled
}

#Keyboard
input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_layout us
  xkb_variant altgr-intl
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Iosevka 11

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
set $primaryCol   #ffffffaa
set $secondaryCol #aaaaaa
set $alarmCol     #cc241d
set $bgCol        #282828f0
set $fgCol        #dddddd
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# colors                border        backgr        text        indicator     child_border
client.focused          $primaryCol $bgCol    $fgCol  $primaryCol $primaryCol
client.unfocused        $bgCol      $bgCol    #aaaaaa $bgCol      $bgCol
client.focused_inactive $bgCol      $bgCol    #aaaaaa $bgCol      $bgCol
client.urgent           $alarmCol   $alarmCol $bgCol  $alarmCol   $alarmCol
client.background       $bgCol

default_border pixel 1
default_floating_border pixel 5
smart_borders on

titlebar_border_thickness 1

gaps inner 0
gaps outer 0
smart_gaps on

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu
    # bindsym $mod+Shift+d exec albert show
    bindsym $mod+Shift+d exec $menu2
    bindsym $mod+p exec $altmenu
    bindsym $mod+x exec rofi -show session -modi session:"~/.config/rofi/scripts/powerfi" -font "Fira Sans 18" -theme-str "listview {layout: horizontal;} element {orientation: vertical;} element-icon {size: 50px;} element-text {horizontal-align: 0.5; width:13ch;}" -auto-select

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # rename focused workspace
    bindsym $mod+F1 rename workspace to 1
    bindsym $mod+F2 rename workspace to 2
    bindsym $mod+F3 rename workspace to 3
    bindsym $mod+F4 rename workspace to 4
    bindsym $mod+F5 rename workspace to 5
    bindsym $mod+F6 rename workspace to 6
    bindsym $mod+F7 rename workspace to 7
    bindsym $mod+F8 rename workspace to 8
    bindsym $mod+F9 rename workspace to 9
    bindsym $mod+F10 rename workspace to 10

    # move to next/previous workspace
    bindsym $mod+Shift+i move container to workspace prev_on_output; workspace prev_on_output
    bindsym $mod+Shift+o move container to workspace next_on_output; workspace next_on_output
    bindsym $mod+i workspace prev_on_output
    bindsym $mod+o workspace next_on_output
    bindsym $mod+z workspace back_and_forth

    bindsym $mod+n exec swaymsg workspace `swaymsg -p -t get_workspaces | grep Workspace | awk '{a=$2}END{print a + 1}'`
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
focus_follows_mouse no
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
# bindsym --locked XF86MonBrightnessDown exec bash ~/.config/mako/scripts/notivalue.sh light  down #         decrease screen brightness
# bindsym --locked XF86MonBrightnessUp   exec bash ~/.config/mako/scripts/notivalue.sh light  up   #         increase screen brightness
# bindsym --locked XF86AudioRaiseVolume  exec bash ~/.config/mako/scripts/notivalue.sh volume up   #increase sound    volume
# bindsym --locked XF86AudioLowerVolume  exec bash ~/.config/mako/scripts/notivalue.sh volume down #decrease sound    volume
# bindsym --locked XF86AudioMute exec pactl set-sink-mute 0 toggle # mute sound
bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym --locked XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob
bindsym --locked XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym --locked XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
bindsym --locked XF86AudioNext exec mpc next
bindsym --locked XF86AudioPrev exec mpc prev
bindsym --locked XF86AudioPlay exec mpc toggle

# kill notifications
bindsym Ctrl+Space exec makoctl dismiss

# Log a message when the laptop lid is opened or closed.
bindswitch lid:toggle exec echo "Lid moved"


# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%d %b %H:%M'; do sleep 1; done

#     colors {
#         statusline $fgCol
#         background $bgCol
#         inactive_workspace $lightBgCol $lightBgCol $fgCol
# 	focused_workspace $lightBgCol $primaryCol $bgCol
# 	urgent_workspace $lightBgCol $alarmCol $fgCol
#     }
# }

bar {
    # optional, currently ignored by waybar but may be useful in future versions
    id bar1
    mode hide
    # note: no 'status_command', as the entire bar is replaced with waybar
    swaybar_command waybar
}

for_window [shell=".*"] title_format "%title :: %shell"
for_window [window_role="About"] floating enable
for_window [urgent="latest"] focus
for_window [title="Authentication*"] floating enabled
for_window [title="ikhal*"] floating enabled
for_window [title="taskell-full"] fullscreen enabled
for_window [title="Gnuplot*"] floating enabled
for_window [title="Waydisplay*"] floating enabled
for_window [title="Choose*"] floating enabled
for_window [title="Connect to*"] floating enabled
for_window [app_id="waybar" floating] {
    move position cursor
    exec python ~/.config/sway/movemenu.py
}
# xwayland version
for_window [class="Firefox"] inhibit_idle fullscreen
# wayland vesion
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [app_id="qalculate-gtk"] floating enabled
for_window [app_id="firefox" title="^Picture-in-Picture$"] floating enable, move position 80 80, sticky enable

# workaround to tell gtk which theme to pick from
set $gnome-schema org.gnome.desktop.interface
exec_always {
    # gsettings set $gnome-schema gtk-theme 'Vimix-Dark-Laptop-Ruby'
    gsettings set $gnome-schema gtk-theme 'Shades-of-gray-Firebrick'
    gsettings set $gnome-schema icon-theme 'Numix-Circle'
    gsettings set $gnome-schema cursor-theme 'Breeze_Amber'
}

include /etc/sway/config.d/*

# exec QT_QPA_PLATFORM="xcb" albert
exec udiskie --smart-tray --appindicator
exec sleep 1 && dex -ae sway
exec_always kanshi

set $bgpic ~/.local/share/background.jpg

exec swayidle -w \
        timeout 300 'swaylock -f -c 000000 -i $bgpic' \
        timeout 600 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
        before-sleep 'swaylock -f -c 000000 -i $bgpic'\
        lock 'swaylock -f -c 000000 -i $bgpic'

exec_always flashfocus --no-flash-fullscreen
exec mkfifo $SWAYSOCK.wob && tail -f $SWAYSOCK.wob | wob
bindsym $mod+shift+return exec flash_window
